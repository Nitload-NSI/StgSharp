<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StgSharp</name>
    </assembly>
    <members>
        <member name="P:StgSharp.Entity.CollisionSensor">
            <summary>
            A sensor used for cheking out if a bullet hit a player or something else
            </summary>
        </member>
        <member name="P:StgSharp.Entity.Location">
            <summary>
            A 2D vector presenting the position of an enemy entity, position can also be visited by X, Y
            </summary>
        </member>
        <member name="P:StgSharp.Entity.X">
            <summary>
            X position of an enenmy entity
            </summary>
        </member>
        <member name="P:StgSharp.Entity.Y">
            <summary>
            Y position of an enemy entity
            </summary>
        </member>
        <member name="F:StgSharp.Geometries.RenderMode.BasePoint">
            <summary>
            坐标点将基于参考原点构建
            </summary>
        </member>
        <member name="F:StgSharp.Geometries.RenderMode.RefPoint">
            <summary>
            坐标点将基于参考起点构建
            </summary>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.colum2,StgSharp.Math.vec2d)">
            <summary>
            
            </summary>
            <param name="colum"></param>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.vec2d,StgSharp.Math.vec2d)">
            <summary>
            
            </summary>
            <param name="vec1"></param>
            <param name="vec2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.vec2d,StgSharp.Math.colum2)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <param name="colum"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.vec2d,StgSharp.Math.matrix2x2)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.vec2d,StgSharp.Math.matrix2x3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.vec2d,StgSharp.Math.matrix2x4)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x2,StgSharp.Math.colum2)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
            <param name="colum"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x2,StgSharp.Math.matrix2x2)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x2,StgSharp.Math.matrix2x3)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x2,StgSharp.Math.matrix2x4)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x3,StgSharp.Math.colum3)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x3,StgSharp.Math.matrix3x2)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x3,StgSharp.Math.matrix3x3)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x3,StgSharp.Math.matrix3x4)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x4,StgSharp.Math.matrix4x2)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x4,StgSharp.Math.matrix4x3)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix2x4,StgSharp.Math.matrix4x4)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix3x2,StgSharp.Math.matrix2x2)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix3x2,StgSharp.Math.matrix2x3)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix3x2,StgSharp.Math.matrix2x4)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix3x3,StgSharp.Math.matrix3x2)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix3x3,StgSharp.Math.matrix3x3)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix3x4,StgSharp.Math.matrix4x2)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix3x4,StgSharp.Math.matrix4x3)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix3x4,StgSharp.Math.matrix4x4)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix4x2,StgSharp.Math.matrix2x4)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.VectorCalc.multiple(StgSharp.Math.matrix4x4,StgSharp.Math.matrix4x4)">
            <summary>
            
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.Calc.ASin(System.Single)">
            <summary>
            Reurns the value of ArcSin(x)
            </summary>
            <param name="x">The sine value of the angle</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StgSharp.Math.Calc.Exp(System.Single)">
            <summary>
            Get the value of E ^ x;
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.Calc.Log(System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <returns>
            Returns the value of ln(x).
            </returns>
        </member>
        <member name="M:StgSharp.Math.Calc.Pow(System.Single,System.Single)">
            <summary>
            calculate the value of x^y
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>Returns the value of x^y</returns>
        </member>
    </members>
</doc>
