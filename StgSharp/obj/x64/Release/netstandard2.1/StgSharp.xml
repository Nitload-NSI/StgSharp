<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StgSharp</name>
    </assembly>
    <members>
        <member name="M:StgSharp.Control.InitPool">
            <summary>
            Add a pool to timeline controller, and return the instance of the pool.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Control.GetKeyStatus(StgSharp.Graphics.Form,StgSharp.Control.Key)">
            <summary>
            Get the status of a certain key on the keyboard.
            </summary>
            <param name="form"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Graphics.GL.SetFrameBufferSizeCallback(StgSharp.Graphics.Form,StgSharp.Graphics.FrameBufferSizeHandler)">
             <summary>
             sets the framebuffer resize callback of the specified <see cref="T:StgSharp.Graphics.Form"/>,
            which is called when the framebuffer of the specified <see cref="T:StgSharp.Graphics.Form"/> is resized.
             </summary>
             <param name="form">The Form instance to be controlled</param>
             <param name="handler">Method hadler </param>
        </member>
        <member name="M:StgSharp.Graphics.GL.ClearColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Call glClearColor in OpenGL
            specifies the red, green, blue, and alpha values used by glClear to clear the color buffers. 
            Values specified by glClearColor are clamped to the range [0,1]
            </summary>
            <param name="R">Specify the red values used when the color buffers are cleared.</param>
            <param name="G">Specify the red values used when the color buffers are cleared.</param>
            <param name="B">Specify the red values used when the color buffers are cleared.</param>
            <param name="A">Specify the red values used when the color buffers are cleared.</param>
        </member>
        <member name="M:StgSharp.Graphics.GL.CompileShader(System.String,StgSharp.Graphics.ShaderType)">
            <summary>
            Conpile the provided shader code in string form.
            </summary>
            <param name="shaderCode">A string represent the shader's code</param>
            <param name="shaderType">An <see cref="T:StgSharp.Graphics.ShaderType"/> enum represent the type of the shader to
            conpile, including vertex shader and fragment shader.</param>
            <returns>An uint value as the only mark of conpiled shader</returns>
        </member>
        <member name="M:StgSharp.Graphics.GL.CreateWindow(System.Int32,System.Int32,System.String,System.IntPtr,StgSharp.Graphics.Form)">
            <summary>
            Creates a form and its associated 
            </summary>
            <param name="width">Required width</param>
            <param name="height">Required width</param>
            <param name="tittle">Tittle of the window </param>
            <param name="monitor"></param>
            <param name="share"></param>
            <returns>The instance of created form</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:StgSharp.Graphics.glLoader">
            <summary>
            Function handler to load an opengl function by serching its name.
            </summary>
            <param name="funcname">the name of the Opengl function</param>
            <returns>An intptr value representing the pointer to the function</returns>
        </member>
        <member name="M:StgSharp.Graphics.Form.#ctor(System.Int32,System.Int32,System.String,System.IntPtr,StgSharp.Graphics.Form)">
            <summary>
            Constructor of a Form, creats an instance of a form and 
            initilize all the customizing operations.
            </summary>
        </member>
        <member name="M:StgSharp.Graphics.Form.MakeAsCurrentContext">
            <summary>
            
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:StgSharp.Graphics.Form.SetSize(System.Int32,System.Int32)">
            <summary>
            Resize the current form
            </summary>
            <param name="width">New width of the window</param>
            <param name="height">New height of the window</param>
        </member>
        <member name="M:StgSharp.Graphics.Form.SetSize(StgSharp.Math.Vec2d)">
            <summary>
            Resize the current form
            </summary>
            <param name="size">
            A <see cref="T:StgSharp.Math.Vec2d"/> (width,height) representing the new size of current form 
            </param>
        </member>
        <member name="M:StgSharp.Graphics.Form.SetSizeLimit(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the size limit of current form
            </summary>
            <param name="minWidth">Minimum width of current form </param>
            <param name="minHeight">Minimum height of current form</param>
            <param name="maxWidth">Maximum width of curent form</param>
            <param name="maxHeight">Maximum height of current form</param>
        </member>
        <member name="M:StgSharp.Graphics.Form.SetSizeLimit(StgSharp.Math.Vec2d,StgSharp.Math.Vec2d)">
            <summary>
            Set the size limit of current form
            </summary>
            <param name="minSize">
            Minimun size of current form. In form of a <see cref="T:StgSharp.Math.Vec2d"/> of (width,height)
            </param>
            <param name="maxSize">
            Maximum size of current form. In form of a <see cref="T:StgSharp.Math.Vec2d"/> of (width,height)
            </param>
        </member>
        <member name="M:StgSharp.Graphics.VertexBuffer.Unbind">
            <summary>
            
            </summary>
        </member>
        <member name="M:StgSharp.Graphics.VertexBuffer.SetData``1(System.Int32,``0,StgSharp.Graphics.BufferUsage)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bufferData"></param>
            <param name="readType"></param>
        </member>
        <member name="M:StgSharp.Graphics.Graphic.InitGL(System.Int32,System.Int32)">
            <summary>
            Init an instance of OpenGL program,
            This method should be called before other 
            graphic methods, after LoadGL method.
            </summary>
        </member>
        <member name="F:StgSharp.Controlling.TimeLine.tickCounter">
            <summary>
            Tick counter count the frames passed since the program start.
            </summary>
        </member>
        <member name="P:StgSharp.IEntity.CollisionSensor">
            <summary>
            A sensor used for cheking out if a bullet hit a player or something else
            </summary>
        </member>
        <member name="P:StgSharp.IEntity.Location">
            <summary>
            A 2D vector presenting the position of an enemy entity, position can also be visited by X, Y
            </summary>
        </member>
        <member name="P:StgSharp.IEntity.X">
            <summary>
            X position of an enenmy entity
            </summary>
        </member>
        <member name="P:StgSharp.IEntity.Y">
            <summary>
            Y position of an enemy entity
            </summary>
        </member>
        <member name="T:StgSharp.Geometries.UnusedVertexException">
            <summary>
            当几何体调用了过多的CalcVec方法时，产生UnusedVertexException异常
            </summary>
        </member>
        <member name="T:StgSharp.Geometries.GetLocationHandler">
            <summary>
            Caculate the movement of a point.
            </summary>
            <param name="tick">The game tick represent time passed by</param>
            <returns>A 3d vector representing movement</returns>
        </member>
        <member name="M:StgSharp.Geometries.Parallelogram.MoveVertex2(System.UInt32)">
            <summary>
            Move the third vertix. this is a useless method for Parallelograms.
            </summary>
            <param name="tick">Current time tick</param>
            <returns></returns>
            <exception cref="T:StgSharp.Geometries.UnusedVertexException">Geometry overdefined</exception>
        </member>
        <member name="M:StgSharp.Geometries.Parallelogram.MoveVertex3(System.UInt32)">
            <summary>
            Move the third vertix. This method is useless for Parallelograms.
            </summary>
            <param name="tick">Current time tick</param>
            <returns></returns>
            <exception cref="T:StgSharp.Geometries.UnusedVertexException">Geometry overdefined</exception>
        </member>
        <member name="T:StgSharp.Geometries.PlainGeometry">
            <summary>
            平面几何体。包含三角形，对称四边形，自由多边形等。最多可由16个点参数定义。
            </summary>
        </member>
        <member name="M:StgSharp.Geometries.Point.Update(System.UInt32)">
            <summary>
            Update the coordinate of the point. If this is a moving point,
            (Points on sides or surface if other geometry items)
            please do not define any motion here, codes will be ignored by program
            </summary>
            <param name="tick">Time passes since the program begin, counted by frames</param>
        </member>
        <member name="M:StgSharp.Geometries.Rectangle.MovCenter(System.UInt32)">
            <summary>
            计算中心点相对于参考原点的位移
            </summary>
            <param name="tick">当前游戏刻</param>
            <returns></returns>
        </member>
        <member name="T:StgSharp.Geometries.Square">
            <summary>
            A square
            </summary>
        </member>
        <member name="M:StgSharp.LinkedList`1.Add(`0)">
            <summary>
            Add an item to the tail of linked list.
            </summary>
            <param name="t">The item ready to add to the list</param>
        </member>
        <member name="T:StgSharp.Math.Vec2d">
            <summary>
            A two dimension vector defined by two elements.
            Vec2Ds in StgSharp are defaultly usaed as colum vector. 
            </summary>
        </member>
        <member name="M:StgSharp.Math.Calc.ASin(System.Single)">
            <summary>
            Reurns the value of ArcSin(x)
            </summary>
            <param name="x">The sine value of the angle</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:StgSharp.Math.Calc.Exp(System.Single)">
            <summary>
            Get the value of E ^ x;
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.Calc.Log(System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <returns>
            Returns the value of ln(x).
            </returns>
        </member>
        <member name="M:StgSharp.Math.Calc.Pow(System.Single,System.Single)">
            <summary>
            calculate the value of x^y
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>Returns the value of x^y</returns>
        </member>
        <member name="M:StgSharp.Math.Calc.Random">
            <summary>
            returns a random float number between 0 and 1.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StgSharp.Math.Calc.RandomSeed">
            <summary>
            Generates a random seed in int value.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
