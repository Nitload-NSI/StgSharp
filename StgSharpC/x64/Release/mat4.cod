; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33523.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	deinit_mat4
PUBLIC	det_mat4
PUBLIC	transpose4to3
PUBLIC	transpose4to4
PUBLIC	transpose4to2
;	COMDAT pdata
pdata	SEGMENT
$pdata$det_mat4 DD imagerel $LN12
	DD	imagerel $LN12+293
	DD	imagerel $unwind$det_mat4
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$transpose4to3 DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$transpose4to3
;	COMDAT xdata
xdata	SEGMENT
$unwind$transpose4to3 DD 031401H
	DD	06814H
	DD	02204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$det_mat4 DD 0b3501H
	DD	0a835H
	DD	01982cH
	DD	02881bH
	DD	037816H
	DD	04680eH
	DD	0a207H
; Function compile flags: /Ogtpy
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
;	COMDAT transpose4to2
_TEXT	SEGMENT
source$ = 8
target$ = 16
transpose4to2 PROC					; COMDAT

; 8    :     __m128 t0 = _mm_shuffle_ps(ALIGN(source->colum[0]), ALIGN(source->colum[1]), _MM_SHUFFLE(1, 0, 1, 0));

  00000	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [rcx+16]
  00004	0f 10 11	 movups	 xmm2, XMMWORD PTR [rcx]

; 9    :     __m128 t2 = _mm_shuffle_ps(ALIGN(source->colum[2]), ALIGN(source->colum[3]), _MM_SHUFFLE(1, 0, 1, 0));

  00007	0f 10 49 20	 movups	 xmm1, XMMWORD PTR [rcx+32]
  0000b	0f c6 d0 44	 shufps	 xmm2, xmm0, 68		; 00000044H
  0000f	0f 10 41 30	 movups	 xmm0, XMMWORD PTR [rcx+48]
  00013	0f c6 c8 44	 shufps	 xmm1, xmm0, 68		; 00000044H

; 10   : 
; 11   :     target->colum[0] = _mm_shuffle_ps(t0, t2, _MM_SHUFFLE(2, 0, 2, 0));

  00017	0f 28 c2	 movaps	 xmm0, xmm2
  0001a	0f c6 c1 88	 shufps	 xmm0, xmm1, 136		; 00000088H

; 12   :     target->colum[1] = _mm_shuffle_ps(t0, t2, _MM_SHUFFLE(3, 1, 3, 1));

  0001e	0f c6 d1 dd	 shufps	 xmm2, xmm1, 221		; 000000ddH
  00022	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  00025	0f 11 52 10	 movups	 XMMWORD PTR [rdx+16], xmm2

; 13   : }

  00029	c3		 ret	 0
transpose4to2 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
;	COMDAT transpose4to4
_TEXT	SEGMENT
source$ = 8
target$ = 16
transpose4to4 PROC					; COMDAT

; 17   :     __m128 t0 = _mm_shuffle_ps(ALIGN(source->colum[0]), ALIGN(source->colum[1]), _MM_SHUFFLE(1, 0, 1, 0));

  00000	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [rcx+16]
  00004	0f 10 21	 movups	 xmm4, XMMWORD PTR [rcx]

; 18   :     __m128 t1 = _mm_shuffle_ps(ALIGN(source->colum[0]), ALIGN(source->colum[1]), _MM_SHUFFLE(3, 2, 3, 2));
; 19   :     __m128 t2 = _mm_shuffle_ps(ALIGN(source->colum[2]), ALIGN(source->colum[3]), _MM_SHUFFLE(1, 0, 1, 0));

  00007	0f 10 51 20	 movups	 xmm2, XMMWORD PTR [rcx+32]
  0000b	0f 28 dc	 movaps	 xmm3, xmm4
  0000e	0f c6 e0 ee	 shufps	 xmm4, xmm0, 238		; 000000eeH
  00012	0f c6 d8 44	 shufps	 xmm3, xmm0, 68		; 00000044H
  00016	0f 28 ca	 movaps	 xmm1, xmm2
  00019	0f 10 41 30	 movups	 xmm0, XMMWORD PTR [rcx+48]
  0001d	0f c6 c8 44	 shufps	 xmm1, xmm0, 68		; 00000044H

; 20   :     __m128 t3 = _mm_shuffle_ps(ALIGN(source->colum[2]), ALIGN(source->colum[3]), _MM_SHUFFLE(3, 2, 3, 2));

  00021	0f c6 d0 ee	 shufps	 xmm2, xmm0, 238		; 000000eeH

; 21   : 
; 22   :     target->colum[0] = _mm_shuffle_ps(t0, t2, _MM_SHUFFLE(2, 0, 2, 0));

  00025	0f 28 c3	 movaps	 xmm0, xmm3
  00028	0f c6 c1 88	 shufps	 xmm0, xmm1, 136		; 00000088H
  0002c	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0

; 23   :     target->colum[1] = _mm_shuffle_ps(t0, t2, _MM_SHUFFLE(3, 1, 3, 1));
; 24   :     target->colum[2] = _mm_shuffle_ps(t1, t3, _MM_SHUFFLE(2, 0, 2, 0));

  0002f	0f 28 c4	 movaps	 xmm0, xmm4
  00032	0f c6 c2 88	 shufps	 xmm0, xmm2, 136		; 00000088H
  00036	0f c6 d9 dd	 shufps	 xmm3, xmm1, 221		; 000000ddH

; 25   :     target->colum[3] = _mm_shuffle_ps(t1, t3, _MM_SHUFFLE(3, 1, 3, 1));

  0003a	0f c6 e2 dd	 shufps	 xmm4, xmm2, 221		; 000000ddH
  0003e	0f 11 42 20	 movups	 XMMWORD PTR [rdx+32], xmm0
  00042	0f 11 5a 10	 movups	 XMMWORD PTR [rdx+16], xmm3
  00046	0f 11 62 30	 movups	 XMMWORD PTR [rdx+48], xmm4

; 26   : }

  0004a	c3		 ret	 0
transpose4to4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
;	COMDAT transpose4to3
_TEXT	SEGMENT
source$ = 32
target$ = 40
transpose4to3 PROC					; COMDAT

; 29   : {

$LN4:
  00000	48 83 ec 18	 sub	 rsp, 24

; 30   :     __m128 t0 = _mm_shuffle_ps(ALIGN(source->colum[0]), ALIGN(source->colum[1]), _MM_SHUFFLE(1, 0, 1, 0));

  00004	0f 10 61 10	 movups	 xmm4, XMMWORD PTR [rcx+16]

; 31   :     __m128 t1 = _mm_shuffle_ps(ALIGN(source->colum[0]), ALIGN(source->colum[1]), _MM_SHUFFLE(3, 2, 3, 2));
; 32   :     __m128 t2 = _mm_shuffle_ps(ALIGN(source->colum[2]), ALIGN(source->colum[3]), _MM_SHUFFLE(1, 0, 1, 0));

  00008	0f 10 69 20	 movups	 xmm5, XMMWORD PTR [rcx+32]
  0000c	0f 10 59 30	 movups	 xmm3, XMMWORD PTR [rcx+48]
  00010	0f 29 34 24	 movaps	 XMMWORD PTR [rsp], xmm6
  00014	0f 28 cd	 movaps	 xmm1, xmm5
  00017	0f 10 31	 movups	 xmm6, XMMWORD PTR [rcx]
  0001a	0f c6 cb 44	 shufps	 xmm1, xmm3, 68		; 00000044H
  0001e	0f 28 d6	 movaps	 xmm2, xmm6

; 33   :     __m128 t3 = _mm_shuffle_ps(ALIGN(source->colum[2]), ALIGN(source->colum[3]), _MM_SHUFFLE(3, 2, 3, 2));

  00021	0f c6 eb ee	 shufps	 xmm5, xmm3, 238		; 000000eeH
  00025	0f c6 d4 44	 shufps	 xmm2, xmm4, 68		; 00000044H
  00029	0f c6 f4 ee	 shufps	 xmm6, xmm4, 238		; 000000eeH

; 34   : 
; 35   :     target->colum[0] = _mm_shuffle_ps(t0, t2, _MM_SHUFFLE(2, 0, 2, 0));

  0002d	0f 28 c2	 movaps	 xmm0, xmm2

; 36   :     target->colum[1] = _mm_shuffle_ps(t0, t2, _MM_SHUFFLE(3, 1, 3, 1));
; 37   :     target->colum[2] = _mm_shuffle_ps(t1, t3, _MM_SHUFFLE(2, 0, 2, 0));

  00030	0f c6 f5 88	 shufps	 xmm6, xmm5, 136		; 00000088H
  00034	0f c6 c1 88	 shufps	 xmm0, xmm1, 136		; 00000088H
  00038	0f c6 d1 dd	 shufps	 xmm2, xmm1, 221		; 000000ddH
  0003c	0f 11 72 20	 movups	 XMMWORD PTR [rdx+32], xmm6

; 38   : }

  00040	0f 28 34 24	 movaps	 xmm6, XMMWORD PTR [rsp]
  00044	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  00047	0f 11 52 10	 movups	 XMMWORD PTR [rdx+16], xmm2
  0004b	48 83 c4 18	 add	 rsp, 24
  0004f	c3		 ret	 0
transpose4to3 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
;	COMDAT det_mat4
_TEXT	SEGMENT
matPtr$ = 96
transpose$ = 104
det_mat4 PROC						; COMDAT

; 41   : {

$LN12:
  00000	48 8b c4	 mov	 rax, rsp
  00003	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 42   :     __m128 mc0 = ALIGN(matPtr->colum[0]);

  00007	0f 10 29	 movups	 xmm5, XMMWORD PTR [rcx]
  0000a	0f 29 70 e8	 movaps	 XMMWORD PTR [rax-24], xmm6

; 47   :     __m128 cogeneration = _mm_set_ps(

  0000e	0f 10 71 30	 movups	 xmm6, XMMWORD PTR [rcx+48]
  00012	0f 29 78 d8	 movaps	 XMMWORD PTR [rax-40], xmm7
  00016	44 0f 29 40 c8	 movaps	 XMMWORD PTR [rax-56], xmm8
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 43   :     __m128 addc2 = _mm_shuffle_ps(c2, c2, _MM_SHUFFLE(3, 1, 0, 2));

  0001b	0f 28 de	 movaps	 xmm3, xmm6
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 47   :     __m128 cogeneration = _mm_set_ps(

  0001e	44 0f 10 41 20	 movups	 xmm8, XMMWORD PTR [rcx+32]
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 43   :     __m128 addc2 = _mm_shuffle_ps(c2, c2, _MM_SHUFFLE(3, 1, 0, 2));

  00023	0f c6 de d2	 shufps	 xmm3, xmm6, 210		; 000000d2H
  00027	44 0f 29 48 b8	 movaps	 XMMWORD PTR [rax-72], xmm9

; 42   :     __m128 addc1 = _mm_shuffle_ps(c1, c1, _MM_SHUFFLE(3, 0, 2, 1));

  0002c	45 0f 28 c8	 movaps	 xmm9, xmm8
  00030	44 0f 29 14 24	 movaps	 XMMWORD PTR [rsp], xmm10
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 43   :     __m128 mc1 = ALIGN(matPtr->colum[1]);

  00035	44 0f 10 51 10	 movups	 xmm10, XMMWORD PTR [rcx+16]
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 42   :     __m128 addc1 = _mm_shuffle_ps(c1, c1, _MM_SHUFFLE(3, 0, 2, 1));

  0003a	45 0f c6 c8 c9	 shufps	 xmm9, xmm8, 201		; 000000c9H

; 44   : 
; 45   :     //let sub row aligned
; 46   :     __m128 subc1 = _mm_shuffle_ps(c1, c1, _MM_SHUFFLE(3, 1, 0, 2));

  0003f	45 0f c6 c0 d2	 shufps	 xmm8, xmm8, 210		; 000000d2H

; 42   :     __m128 addc1 = _mm_shuffle_ps(c1, c1, _MM_SHUFFLE(3, 0, 2, 1));

  00044	41 0f 28 d2	 movaps	 xmm2, xmm10
  00048	41 0f c6 d2 c9	 shufps	 xmm2, xmm10, 201	; 000000c9H

; 54   :     __m128 sub = _mm_mul_ps(c0, subc1);

  0004d	41 0f 28 c0	 movaps	 xmm0, xmm8
  00051	41 0f 59 c2	 mulps	 xmm0, xmm10
  00055	41 0f 28 c9	 movaps	 xmm1, xmm9
  00059	41 0f 59 ca	 mulps	 xmm1, xmm10
  0005d	0f c6 f6 c9	 shufps	 xmm6, xmm6, 201		; 000000c9H

; 55   :     sub = _mm_mul_ps(sub, subc2);

  00061	0f 59 c6	 mulps	 xmm0, xmm6
  00064	0f 59 cb	 mulps	 xmm1, xmm3

; 46   :     __m128 subc1 = _mm_shuffle_ps(c1, c1, _MM_SHUFFLE(3, 1, 0, 2));

  00067	45 0f c6 d2 d2	 shufps	 xmm10, xmm10, 210	; 000000d2H

; 47   :     __m128 subc2 = _mm_shuffle_ps(c2, c2, _MM_SHUFFLE(3, 0, 2, 1));
; 48   : 
; 49   :     //multple all add row
; 50   :     __m128 cache = _mm_mul_ps(c0, addc1);

  0006c	0f 59 d5	 mulps	 xmm2, xmm5

; 58   :     cache = _mm_sub_ps(cache, sub);

  0006f	0f 5c c8	 subps	 xmm1, xmm0

; 54   :     __m128 sub = _mm_mul_ps(c0, subc1);

  00072	44 0f 59 d5	 mulps	 xmm10, xmm5
  00076	41 0f 28 c0	 movaps	 xmm0, xmm8
  0007a	0f 59 c5	 mulps	 xmm0, xmm5

; 60   :     __m128 ret = _mm_hadd_ps(cache, cache);    //element 1 add element 2

  0007d	0f 28 f9	 movaps	 xmm7, xmm1
  00080	f2 0f 7c f9	 haddps	 xmm7, xmm1

; 55   :     sub = _mm_mul_ps(sub, subc2);

  00084	0f 59 c6	 mulps	 xmm0, xmm6

; 61   :     ret = _mm_add_ps(ret, cache);    //(e1 add e2) add element 3

  00087	0f 58 f9	 addps	 xmm7, xmm1

; 50   :     __m128 cache = _mm_mul_ps(c0, addc1);

  0008a	41 0f 28 c9	 movaps	 xmm1, xmm9
  0008e	0f 59 cd	 mulps	 xmm1, xmm5
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 47   :     __m128 cogeneration = _mm_set_ps(

  00091	0f c6 ff aa	 shufps	 xmm7, xmm7, 170		; 000000aaH
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 51   :     cache = _mm_mul_ps(cache, addc2);

  00095	0f 59 cb	 mulps	 xmm1, xmm3

; 58   :     cache = _mm_sub_ps(cache, sub);

  00098	0f 5c c8	 subps	 xmm1, xmm0

; 55   :     sub = _mm_mul_ps(sub, subc2);

  0009b	41 0f 28 c2	 movaps	 xmm0, xmm10
  0009f	0f 59 c6	 mulps	 xmm0, xmm6
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 57   : }

  000a2	0f 28 70 e8	 movaps	 xmm6, XMMWORD PTR [rax-24]
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 55   :     sub = _mm_mul_ps(sub, subc2);

  000a6	45 0f 59 d1	 mulps	 xmm10, xmm9
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 57   : }

  000aa	44 0f 28 48 b8	 movaps	 xmm9, XMMWORD PTR [rax-72]
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 60   :     __m128 ret = _mm_hadd_ps(cache, cache);    //element 1 add element 2

  000af	0f 28 e1	 movaps	 xmm4, xmm1
  000b2	f2 0f 7c e1	 haddps	 xmm4, xmm1

; 61   :     ret = _mm_add_ps(ret, cache);    //(e1 add e2) add element 3

  000b6	0f 58 e1	 addps	 xmm4, xmm1

; 51   :     cache = _mm_mul_ps(cache, addc2);

  000b9	0f 28 ca	 movaps	 xmm1, xmm2
  000bc	0f 59 cb	 mulps	 xmm1, xmm3
  000bf	41 0f 59 d0	 mulps	 xmm2, xmm8
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 57   : }

  000c3	44 0f 28 40 c8	 movaps	 xmm8, XMMWORD PTR [rax-56]
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 58   :     cache = _mm_sub_ps(cache, sub);

  000c8	0f 5c c8	 subps	 xmm1, xmm0
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 47   :     __m128 cogeneration = _mm_set_ps(

  000cb	0f c6 e4 aa	 shufps	 xmm4, xmm4, 170		; 000000aaH
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 58   :     cache = _mm_sub_ps(cache, sub);

  000cf	41 0f 5c d2	 subps	 xmm2, xmm10
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 57   : }

  000d3	44 0f 28 14 24	 movaps	 xmm10, XMMWORD PTR [rsp]
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 60   :     __m128 ret = _mm_hadd_ps(cache, cache);    //element 1 add element 2

  000d8	0f 28 d9	 movaps	 xmm3, xmm1
  000db	f2 0f 7c d9	 haddps	 xmm3, xmm1
  000df	0f 28 c2	 movaps	 xmm0, xmm2

; 61   :     ret = _mm_add_ps(ret, cache);    //(e1 add e2) add element 3

  000e2	0f 58 d9	 addps	 xmm3, xmm1

; 60   :     __m128 ret = _mm_hadd_ps(cache, cache);    //element 1 add element 2

  000e5	f2 0f 7c c2	 haddps	 xmm0, xmm2
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 47   :     __m128 cogeneration = _mm_set_ps(

  000e9	0f c6 db aa	 shufps	 xmm3, xmm3, 170		; 000000aaH
  000ed	0f 28 cb	 movaps	 xmm1, xmm3
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat3.c

; 61   :     ret = _mm_add_ps(ret, cache);    //(e1 add e2) add element 3

  000f0	0f 58 c2	 addps	 xmm0, xmm2
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c

; 47   :     __m128 cogeneration = _mm_set_ps(

  000f3	0f 28 df	 movaps	 xmm3, xmm7

; 57   : }

  000f6	0f 28 78 d8	 movaps	 xmm7, XMMWORD PTR [rax-40]
  000fa	0f 14 dc	 unpcklps xmm3, xmm4
  000fd	0f c6 c0 aa	 shufps	 xmm0, xmm0, 170		; 000000aaH
  00101	0f 14 c8	 unpcklps xmm1, xmm0
  00104	0f 10 42 30	 movups	 xmm0, XMMWORD PTR [rdx+48]
  00108	0f 16 d9	 movlhps xmm3, xmm1
  0010b	0f 59 d8	 mulps	 xmm3, xmm0
  0010e	f2 0f 7d db	 hsubps	 xmm3, xmm3
  00112	f2 0f 7c db	 haddps	 xmm3, xmm3
  00116	0f 57 1d 00 00
	00 00		 xorps	 xmm3, DWORD PTR __xmm@80000000800000008000000080000000
  0011d	0f 28 c3	 movaps	 xmm0, xmm3
  00120	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00124	c3		 ret	 0
det_mat4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\NitloadIndustry\研究项目\1-Flagship\TH2020\ProjectFile\源代码\StgSharpC\mat4.c
;	COMDAT deinit_mat4
_TEXT	SEGMENT
matPtr$ = 8
deinit_mat4 PROC					; COMDAT

; 61   :     _aligned_free(matPtr);

  00000	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp__aligned_free
deinit_mat4 ENDP
_TEXT	ENDS
END
